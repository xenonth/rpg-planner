{"version":3,"sources":["utils/API.js","components/inhabitantItem.js","components/randomBtn.js","components/randomCard.js","components/randomTown.js","pages/GeneratedTown.js","components/CardDB.js","components/ListAllEntries.js","pages/Home.js","components/SubmitBtn.js","components/CreateFormBasic.js","pages/SubmitIdea.js","components/Login/LoginBtn.js","components/Login/Login.js","components/LogoutBtn.js","pages/SignUp.js","components/WelcomeUser.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["API","randomSettlement","axios","get","getSettlements","getSettlementId","id","deleteSettlement","delete","saveSettlement","postSettlement","post","InhabitantItem","props","races","console","log","removeBlanks","filter","race","undefined","listItems","map","toString","GenerateTown","Box","m","Button","variant","color","onClick","className","useStyles","makeStyles","root","minWidth","title","fontSize","fontWeight","textAlign","pos","marginBottom","body","background","footer","marginTop","RandomCard","name","government","type","size","description","happening","classes","Card","Typography","placeholder","CardContent","component","RandomTown","firstLetterCapital","string","charAt","toUpperCase","slice","renderSettlement","then","res","JSON","stringify","data","setState","population","raceOne","raceTwo","raceThree","raceFour","whatsUp","whatIsGoingOn","catch","err","state","this","Component","theme","flexGrow","GeneratorPage","Grid","container","spacing","item","lg","xs","margin","CardDB","ListAllEntries","AllEntries","settlementOne","settlementTwo","settlementThree","settlementFour","settlementFive","town","majorityRace","otherInformation","Home","md","SubmitBtn","CreateForm","addToDB","numberOfRaces","parseInt","numberOfRacesValue","percentageOne","percentageOneValue","townValue","typeValue","populationValue","govern","governValue","descriptionValue","raceOneValue","majorityPercentage","otherValue","author","authorValue","alert","error","handleChange","bind","handleSubmit","event","target","value","preventDefault","autoComplete","htmlFor","onChange","required","cols","rows","min","max","sidePaper","padding","palette","text","secondary","paperForm","SubmitIdea","Paper","LoginButton","useAuth0","loginWithRedirect","isAuthenticated","Login","LoginBtn","LogoutButton","logout","SignUp","WelcomeUser","user","isLoading","clasName","p","headersData","label","href","header","paddingLeft","d20","menuButton","marginLeft","toolbar","display","justifyContent","drawerContainer","Header","useState","mobileView","drawerOpen","useEffect","setResponsiveness","window","innerWidth","prevState","addEventListener","getDrawerChoices","Link","RouterLink","to","style","textDecoration","key","MenuItem","getMenuButtons","AppBar","position","Toolbar","IconButton","edge","Drawer","anchor","open","onClose","icon","faDiceD20","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","domain","process","clientId","redirectUri","location","origin","document","getElementById"],"mappings":"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","file":"static/js/main.543d80c1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = {\r\n    //randomiseSettlement script\r\n    randomSettlement: function() {\r\n        return axios.get(\"api/random-town\");\r\n    },\r\n    getSettlements: function () {\r\n        return axios.get(\"/api/settlements\");\r\n    },\r\n    // Gets the post with the given id\r\n    getSettlementId: function(id) {\r\n        return axios.get(`/api/posts/${id}`);\r\n    },\r\n\r\n  // Deletes the post with the given id\r\n    deleteSettlement: function(id) {\r\n        return axios.delete(`/api/posts/${id}`);\r\n    },\r\n  // Saves a post to the database\r\n    saveSettlement: function(postSettlement) {\r\n        return axios.post(\"/api/settlements\", postSettlement);\r\n    }\r\n};\r\n\r\nexport default API;\r\n","import React from 'react';\r\n\r\nfunction InhabitantItem (props) {\r\n    const races = props.races;\r\n    console.log(races)\r\n    const removeBlanks = races.filter(race => race !== undefined);\r\n    console.log(removeBlanks)\r\n    const listItems = removeBlanks.map((race) => \r\n        <li key={race.toString()}>\r\n            {race}\r\n        </li>\r\n    )\r\n\r\n    return (\r\n        <ul>{listItems}</ul>\r\n      );\r\n}\r\n\r\nexport default InhabitantItem;\r\n\r\n//Transport this data to new file","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction GenerateTown(props) {\r\n  return (\r\n    <Box m={1}>\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={props.onClick} className={`${props[\"data-value\"]}`} {...props} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default GenerateTown;","import React from 'react';\r\n\r\n//imports from material ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//imported from components file\r\nimport InhabitantItem from './inhabitantItem';\r\nimport GenerateTown from './randomBtn';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n\r\n  },\r\n\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: \"center\",\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n\r\n  body: {\r\n      fontSize: 18,\r\n      color: \"white\",\r\n      textAlign: \"center\",\r\n      background: \"green\",\r\n  },\r\n  \r\n  footer: {\r\n      textAlign: \"center\",\r\n      marginTop: 8,\r\n      marginBottom: 10,\r\n  },\r\n});\r\n\r\nfunction RandomCard(props) {\r\n    const name = props.name;\r\n    const government = props.government;\r\n    const type = props.type;\r\n    const size = props.size;\r\n    const description = props.description\r\n    const happening = props.happening;\r\n\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n    <Card variant=\"outlined\" className={classes.root}>\r\n    <Typography className={classes.title} placeholder=\"Town Name Here\">\r\n        {name}\r\n    </Typography>\r\n\r\n    <CardContent className={classes.body}>\r\n      <Typography  component={'section'}>\r\n        Government: {government}\r\n      </Typography>\r\n      <br></br>\r\n      <Typography component={'section'}>\r\n          Settlement Size:{type}\r\n      </Typography>\r\n      <br></br>\r\n      <Typography component={'section'}>\r\n        Population: {size}\r\n      </Typography>\r\n      <br></br>\r\n      <Typography component={'section'}>\r\n          Inhabitants: <InhabitantItem races={props.races} />\r\n      </Typography>\r\n      <br></br>\r\n      <Typography component={'section'}>\r\n          Description:{description}\r\n      </Typography>\r\n      <br></br>\r\n      <Typography component={'section'}>\r\n        Event: {happening}\r\n      </Typography>\r\n    </CardContent>\r\n     <Typography component={'div'} className={classes.footer}>\r\n      <GenerateTown onClick={props.onClick}>GENERATE TOWN</GenerateTown>\r\n    </Typography>\r\n  </Card>\r\n  );\r\n}\r\n\r\nexport default RandomCard","import React, { Component } from 'react';\r\n\r\nimport API from '../utils/API'\r\n\r\nimport RandomCard from './randomCard'\r\n\r\nclass RandomTown extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      government: '',\r\n      population: '',\r\n      size: '',\r\n      description: '',\r\n      whatsUp: '',\r\n      races: []\r\n    }\r\n  };\r\n  // When the component mounts, load the next settlement to be displayed\r\n  componentDidMount() {\r\n    this.renderSettlement();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.renderSettlement()\r\n  }\r\n\r\n  //convert first letter of string to uppercase\r\n  firstLetterCapital = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1)\r\n  }\r\n  //onClick of button call the API to render data to the page\r\n\r\n\r\n  //loading the API call and equating it the settlement state object.\r\n  renderSettlement = () => {\r\n    API.randomSettlement().then(res => {\r\n      console.log('its working' + JSON.stringify(res.data))\r\n      this.setState ({\r\n        name: res.data.name.toUpperCase(),\r\n        government: this.firstLetterCapital(res.data.government),\r\n        population: this.firstLetterCapital(res.data.population.type), \r\n        size: res.data.population.size,\r\n        \r\n        races:[\r\n          res.data.population.raceOne,\r\n          res.data.population.raceTwo,\r\n          res.data.population.raceThree,\r\n          res.data.population.raceFour,\r\n        ],\r\n        description: res.data.description,\r\n        whatsUp: res.data.whatIsGoingOn,\r\n  \r\n      })\r\n    })\r\n    .catch(err => console.log(err));\r\n  };\r\n  //styles for materialUI\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RandomCard \r\n          name = {this.state.name}\r\n          government= {this.state.government}\r\n          type = {this.state.population}\r\n          size = {this.state.size}\r\n          races ={this.state.races}\r\n          description = {this.state.description}\r\n          happening = {this.state.whatsUp}\r\n          onClick={this.renderSettlement}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default RandomTown;","import RandomTown from '../components/randomTown';\r\n\r\n//MUI layout\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nfunction GeneratorPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item lg={2} xs={12}></Grid>  \r\n                \r\n                    <Grid item lg={8} xs={12}>\r\n                        <RandomTown />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} lg={2}></Grid>\r\n                </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneratorPage;","import React from 'react';\r\n\r\n//imports from material ui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import files from Card\r\n\r\n\r\n//Material UI styles for cardDB\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n      margin: '1%',\r\n      \r\n    },\r\n  \r\n    title: {\r\n      fontSize: 20,\r\n      fontWeight: 'bold',\r\n      textAlign: \"center\",\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    body: {\r\n        fontSize: 18,\r\n        color: \"white\",\r\n        textAlign: \"center\",\r\n        background: \"green\",\r\n    },\r\n  });\r\n\r\n\r\nfunction CardDB (props) {\r\n    const name = props.name;\r\n    const government = props.government;\r\n    const type = props.type;\r\n    const size = props.size;\r\n    const description = props.description\r\n    const happening = props.happening;\r\n    const race = props.race\r\n    //function to call styles\r\n    const classes = useStyles();\r\n\r\n    \r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <Typography className={classes.title} component={'section'}>\r\n                {name.toUpperCase()}\r\n            </Typography>\r\n            <CardContent className={classes.body} >\r\n                <Typography component={'section'}>\r\n                    Government: {government}\r\n                </Typography>\r\n                <Typography component={'section'}>\r\n                    Settlement Size: {type}\r\n                </Typography>\r\n                <Typography component={'section'}>\r\n                    Population: {size}\r\n                </Typography>\r\n                <Typography component={'section'}>\r\n                    Majority Race: {race}\r\n                </Typography>\r\n                <Typography component={'section'}>\r\n                    Description:{description}\r\n                </Typography>\r\n                <Typography component={'section'}>\r\n                    Event: {happening}\r\n                </Typography>\r\n          </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardDB;","import React, { Component } from 'react';\r\n\r\nimport API from '../utils/API'\r\n\r\nimport CardDB from './CardDB';\r\n\r\nclass ListAllEntries extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            settlementOne: [],\r\n            settlementTwo: [],\r\n            settlementThree: [],\r\n            settlementFour: [],\r\n            settlementFive: [],\r\n        }\r\n    }  \r\n\r\n    //convert first letter of string to uppercase\r\n    firstLetterCapital = (string) => {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n      }\r\n  //need to recode to loop through all the settlements and create a card for each one!\r\n    AllEntries = () => {\r\n        API.getSettlements().then(res => {\r\n            console.log('its rendering' + JSON.stringify(res.data))\r\n            this.setState({\r\n                settlementOne: [res.data[0]],\r\n                settlementTwo: [res.data[1]],\r\n                settlementThree: [res.data[2]],\r\n                settlementFour: [res.data[3]],\r\n                settlementFive: [res.data[4]],\r\n            })\r\n        }).catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.AllEntries(); \r\n    }\r\n    \r\n    //rendering the five most recent objects in the database\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {this.state.settlementOne.map((town) => (\r\n                    \r\n                    <CardDB key={town.id}\r\n                        name={town.name}\r\n                        government={town.government}\r\n                        type={town.type}\r\n                        size={town.size}\r\n                        race={town.population.majorityRace}\r\n                        description={town.description}\r\n                        happening={town.otherInformation}\r\n                    />\r\n                ))}\r\n\r\n                {this.state.settlementTwo.map((town) => (\r\n                    \r\n                    <CardDB key={town.id}\r\n                        name={town.name}\r\n                        government={town.government}\r\n                        type={town.type}\r\n                        size={town.size}\r\n                        race={town.population.majorityRace}\r\n                        description={town.description}\r\n                        happening={town.otherInformation}\r\n                    />\r\n                ))}\r\n\r\n                {this.state.settlementThree.map((town) => (\r\n                    \r\n                    <CardDB key={town.id}\r\n                        name={town.name}\r\n                        government={town.government}\r\n                        type={town.type}\r\n                        size={town.size}\r\n                        race={town.population.majorityRace}\r\n                        description={town.description}\r\n                        happening={town.otherInformation}\r\n                    />\r\n                ))}\r\n\r\n                {this.state.settlementFour.map((town) => (\r\n                    \r\n                    <CardDB key={town.id}\r\n                        name={town.name}\r\n                        government={town.government}\r\n                        type={town.type}\r\n                        size={town.size}\r\n                        race={town.population.majorityRace}\r\n                        description={town.description}\r\n                        happening={town.otherInformation}\r\n                    />\r\n                ))}\r\n\r\n                {this.state.settlementFive.map((town) => (\r\n                    \r\n                    <CardDB key={town.id}\r\n                        name={town.name}\r\n                        government={town.government}\r\n                        type={town.type}\r\n                        size={town.size}\r\n                        race={town.population.majorityRace}\r\n                        description={town.description}\r\n                        happening={town.otherInformation}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ListAllEntries;","import React from \"react\";\r\n//bootstrap layout\r\n\r\nimport ListAllEntries from '../components/ListAllEntries';\r\n//MUI layout\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\n\r\n\r\n//Render Most recent 10 posts from the database here.\r\nconst Home = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n    <Grid container spacing={2}>\r\n        <Grid item xs={12} md={2}>\r\n          WELCOME TO THE RPG PLANNER\r\n        </Grid>\r\n        <Grid item md={8}>\r\n            <ListAllEntries />\r\n        </Grid>\r\n        <Grid item xs={12} lg={2}></Grid>\r\n    </Grid>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n//wrapper to add padding as submit btn is stuck to bottom of authorValue input field\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction SubmitBtn(props) {\r\n  return (\r\n    <Box m={2}>\r\n    <Button  variant='contained' color=\"secondary\" type=\"submit\" onClick={props.onClick} className={`${props[\"data-value\"]}`} {...props} >\r\n        SUBMIT\r\n    </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SubmitBtn;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport API from '../utils/API';\r\nimport SubmitBtn from './SubmitBtn'\r\n\r\n//import btn component \r\n//Attempted importing a form component but would not work with the value attribute\r\n\r\n\r\n\r\nclass CreateForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      townValue: '',\r\n      governValue:'',\r\n      typeValue: '',\r\n      populationValue: '',\r\n      numberOfRacesValue: '',\r\n      descriptionValue: '',\r\n      raceOneValue: '',\r\n      percentageOneValue: '',\r\n      otherValue: '',\r\n      authorValue: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  //setState\r\n  //type code here to actively update the state based on the value of the different fields. \r\n\r\n  \r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    \r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    \r\n      //Code to check that the population field is a number or integer\r\n        //if this.state.popvalue !== Number convert number or alert to reenter a value\r\n    this.addToDB();\r\n  }\r\n\r\n  \r\n\r\n  //code for an API function to send a post request to the API in the object layout\r\n  addToDB = () => {\r\n    const numberOfRaces = parseInt(this.state.numberOfRacesValue);\r\n    const percentageOne = parseInt(this.state.percentageOneValue);\r\n\r\n    let postSettlement = {\r\n      name: this.state.townValue,\r\n      type: this.state.typeValue,\r\n      size: this.state.populationValue,\r\n      govern: this.state.governValue,\r\n      description: this.state.descriptionValue,\r\n      population: {\r\n        numberOfRaces: numberOfRaces,\r\n        majorityRace: this.state.raceOneValue,\r\n        majorityPercentage: percentageOne\r\n      },\r\n      otherInformation: this.state.otherValue,\r\n      author: this.state.authorValue\r\n    }\r\n\r\n\r\n\r\n    console.log(postSettlement)\r\n    API.saveSettlement(postSettlement).then((res => {\r\n      alert(`Your Settlement ${res.data.name} has been added to the database`);\r\n    })\r\n    ).catch((error => {\r\n      alert(`${error} encountered please try again later`)\r\n    }))\r\n  }\r\n\r\n  //look into dropping percentage in the schema as it is not currently being used\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form autoComplete='on'>\r\n        <Box m={2}>\r\n          <label htmlFor='townValue'>Town Name</label>\r\n          <br></br>\r\n            <input type='text' name='townValue' id='townValue' placeholder=\"Settlement Name\" value={this.state.townValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n          </Box>\r\n\r\n          <Box m={2}>\r\n            <label htmlFor='governValue'>Government</label>\r\n            <br></br>\r\n            <input name='governValue' id='governValue' placeholder=\"How is Your Town Ruled\" value={this.state.governValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n            </Box>\r\n\r\n            <Box m={2}>\r\n            <label htmlFor='typeValue'>Type</label>\r\n            <br></br>\r\n            <input name='typeValue' id='typeValue' placeholder=\"Is it a hamlet, farming-community, village, town, city, monastic order?\" value={this.state.typeValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n            </Box>\r\n          \r\n            <Box m={2}>\r\n            <label>Population</label>\r\n            <br></br>\r\n            <input type=\"number\" name='populationValue' placeholder=\"How many people live in your settlement?\" value={this.state.populationValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n            </Box>\r\n\r\n            <Box m={2}>\r\n            <label htmlFor='descriptionValue'>Description:</label>\r\n            <br></br>\r\n            <textarea cols=\"50\" rows=\"6\" placeholder=\"What does your settlement look like?\" id='descriptionValue' name='descriptionValue' type=\"text\" value={this.state.descriptionValue} onChange={this.handleChange} required/>    \r\n            <br></br>\r\n            </Box>\r\n          \r\n            <Box m={2}>\r\n            <label htmlFor='numberOfRacesValue'>How Many Races Live in Your Settlement?</label>\r\n            <br></br>\r\n            <input min='1' max='5' id='numberOfRacesValue' name='numberOfRacesValue' type=\"number\" value={this.state.numberOfRacesValue} onChange={this.handleChange} required/>\r\n            <br></br>  \r\n            </Box>   \r\n\r\n            <Box m={2}>\r\n            <label htmlFor='raceOneValue'>Dominant Race name which lives in the settlement?</label>\r\n            <br></br>\r\n            <input id='raceOneValue' name='raceOneValue' placeholder=\"Race Name\" value={this.state.raceOneValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n            </Box>\r\n            <Box m={2}>\r\n            <label htmlFor='percentageOneValue'>Percentage:</label>\r\n            <br></br>\r\n            <input name='percentageOneValue' type=\"number\" min='1' max='100' placeholder=\"Percentage of the majority race which lives in this town.\" value={this.state.percentageOneValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n            </Box>\r\n            \r\n            <Box m={2}>\r\n            <label htmlFor='otherValue'>Other Information:</label>\r\n            <br></br>\r\n            <textarea type=\"text\" id='otherValue' name='otherValue' cols=\"50\" rows=\"6\" placeholder='Key NPCS, events, Other Races Which live here, what is that shifty blind man up to?' value={this.state.otherValue} onChange={this.handleChange} required/>\r\n            <br></br>\r\n            </Box>\r\n\r\n            <label htmlFor='authorValue'>By</label>\r\n            <br></br>\r\n            <input id='authorValue' name='authorValue' placeholder=\"Author Name Here\" value={this.state.authorValue} onChange={this.handleChange} required />\r\n            <br></br>\r\n\r\n            <SubmitBtn onClick={this.handleSubmit}/>\r\n        </form>\r\n    </div>\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nexport default CreateForm;","import React from \"react\";\r\n//Material UI interface\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CreateForm from '../components/CreateFormBasic';\r\n//<Paper variant=\"outlined\" square />\r\n//Render Most recent 10 posts from the database here.\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  sidePaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n\r\n  paperForm: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: 'white',\r\n    background: 'blue',\r\n    margin: '1%',\r\n  },\r\n}));\r\n\r\nconst SubmitIdea = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12}></Grid>\r\n        <Grid item md={2} xs={12}>\r\n          <Paper className ={classes.sidePaper}>Add Your Own Idea to the system for others to explore and view!</Paper>\r\n        </Grid>\r\n        <Grid item md={8} xs={12}>\r\n          <Paper className ={classes.paperForm}><CreateForm /></Paper>\r\n        </Grid>\r\n        <Grid item md={2}></Grid>\r\n      </Grid>\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default SubmitIdea;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LoginButton = () => {\r\n  const { loginWithRedirect, isAuthenticated } = useAuth0();\r\n  \r\n\r\n  return (\r\n    !isAuthenticated && (\r\n  <Button variant='contained' color=\"secondary\" onClick={() => loginWithRedirect()}>Log In</Button>\r\n  ))\r\n};\r\n\r\nexport default LoginButton;","import React from 'react';\r\n\r\nimport LoginBtn from './LoginBtn';\r\n\r\n\r\nexport default function Login() {\r\n\r\n  return(\r\n    <div>\r\n        <LoginBtn />\r\n    </div>\r\n\r\n  )\r\n}","import React from 'react';\r\n\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LogoutButton = () => {\r\n  const { logout, isAuthenticated } = useAuth0();\r\n\r\n  return (\r\n    isAuthenticated && (\r\n      <Button variant='contained' color=\"secondary\"onClick={() => logout()}>Log Out</Button>\r\n  ))\r\n};\r\n\r\nexport default LogoutButton;","import React from 'react';\r\n\r\n//MUI layout\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Login from '../components/Login/Login';\r\n\r\nimport LogoutButton from '../components/LogoutBtn'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        padding: '20px',\r\n    }\r\n})\r\n//Login react page using online examples\r\nfunction SignUp () {\r\n    const classes = useStyles();\r\n    return (\r\n        <Grid container>\r\n            <Paper className={classes.root}>\r\n                <Login />\r\n            </Paper>\r\n            <Paper className={classes.root}>\r\n                <LogoutButton />\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SignUp;","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    sidePaper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      fontSize: '20pt',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nconst WelcomeUser = () => {\r\n    const classes = useStyles()\r\n  const { user, isAuthenticated, isLoading } = useAuth0();\r\n\r\n  if (isLoading) {\r\n    return <div>Loading ...</div>;\r\n  }\r\n\r\n  return (\r\n    isAuthenticated && (\r\n    <div>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} md={2}>\r\n                <Box clasName={classes.sidePaper} p={2}>\r\n                    <Typography>Welcome to the rpg Planner {user.name}</Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={10}></Grid>\r\n        </Grid>\r\n    </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default WelcomeUser;","import React, { useState, useEffect } from 'react';\r\n\r\n//Material UI Dependencies\r\nimport { AppBar, Toolbar, makeStyles, Button, IconButton, \r\n  Drawer, Link, MenuItem,} from \"@material-ui/core\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\n//for React link navigation\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n//fontawesome-Icon\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDiceD20} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst headersData = [\r\n  {\r\n    label: \"Home\",\r\n    href: \"/home\",\r\n  },\r\n  {\r\n    label: \"random\",\r\n    href: \"/random\",\r\n  },\r\n  {\r\n    label: \"custom\",\r\n    href: \"/custom\",\r\n  },\r\n  {\r\n    label: \"login\",\r\n    href: \"/login\"\r\n  },\r\n];\r\n\r\n//Materials UI layout\r\nconst useStyles = makeStyles(() => ({\r\n  header: {\r\n     \"@media (max-width: 900px)\": {\r\n      paddingLeft: 0,\r\n    },\r\n  },\r\n  d20: {\r\n    color: \"white\",\r\n  },\r\n  menuButton: {\r\n    size: \"18px\",\r\n    marginLeft: \"38px\",\r\n },\r\n toolbar: {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n},\r\ndrawerContainer: {\r\n  padding: \"20px 30px\",\r\n},\r\n}));\r\n\r\nfunction Header() {\r\n  \r\n  //css styles for header\r\n  const {header, d20, menuButton, toolbar, drawerContainer} = useStyles();\r\n  \r\n  const [state, setState] = useState({\r\n    mobileView: false,\r\n    drawerOpen: false,\r\n  })\r\n\r\nconst { mobileView, drawerOpen } = state;\r\n  //responsive material-ui via state\r\n\r\n  useEffect(() => {\r\n    const setResponsiveness = () => {\r\n      return window.innerWidth < 900\r\n        ? setState((prevState) => ({ ...prevState, mobileView: true }))\r\n        : setState((prevState) => ({ ...prevState, mobileView: false }));\r\n    };\r\n\r\n    setResponsiveness();\r\n\r\n    window.addEventListener(\"resize\", () => setResponsiveness());\r\n  }, []);\r\n\r\n\r\n    const displayDesktop = () => {\r\n      return <Toolbar className={toolbar}>\r\n        <FontAwesomeIcon className={d20} icon={faDiceD20} />  \r\n        <div>{getMenuButtons()}</div> \r\n      </Toolbar>;\r\n    };\r\n\r\n    const displayMobile = () => {\r\n      const handleDrawerOpen = () =>\r\n        setState((prevState) => ({ ...prevState, drawerOpen: true }));\r\n      const handleDrawerClose = () =>\r\n        setState((prevState) => ({ ...prevState, drawerOpen: false }));\r\n  \r\n      return (\r\n        <Toolbar>\r\n          <IconButton\r\n            {...{\r\n              edge: \"start\",\r\n              color: \"inherit\",\r\n              \"aria-label\": \"menu\",\r\n              \"aria-haspopup\": \"true\",\r\n              onClick: handleDrawerOpen,\r\n            }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n  \r\n          <Drawer\r\n            {...{\r\n              anchor: \"left\",\r\n              open: drawerOpen,\r\n              onClose: handleDrawerClose,\r\n            }}\r\n          >\r\n            <div className={drawerContainer}>{getDrawerChoices()}</div>\r\n          </Drawer>\r\n  \r\n          <div><FontAwesomeIcon className={d20} icon={faDiceD20} /> </div>\r\n        </Toolbar>\r\n      );\r\n    };\r\n    \r\n    const getDrawerChoices = () => {\r\n      return headersData.map(({ label, href }) => {\r\n        return (\r\n          <Link\r\n            {...{\r\n              component: RouterLink,\r\n              to: href,\r\n              color: \"inherit\",\r\n              style: { textDecoration: \"none\" },\r\n              key: label,\r\n            }}\r\n          >\r\n            <MenuItem>{label}</MenuItem>\r\n          </Link>\r\n        );\r\n      });\r\n    };\r\n\r\n    const getMenuButtons = () => {\r\n      return headersData.map(({ label, href }) => {\r\n        return (\r\n          <Button\r\n            {...{\r\n              key: label,\r\n              color: \"inherit\",\r\n              to: href,\r\n              component: RouterLink,\r\n              className: menuButton\r\n            }}\r\n          >\r\n            {label}\r\n          </Button>\r\n        );\r\n      });\r\n    };\r\n\r\n    return (\r\n      <header className={header}>\r\n        <AppBar position=\"sticky\">{mobileView ? displayMobile() : displayDesktop()}</AppBar>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\n\n// imported for user authentication\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\n//import page files \nimport GeneratorPage from './pages/GeneratedTown';\nimport Home from './pages/Home';\nimport SubmitIdea from './pages/SubmitIdea';\nimport SignUp from './pages/SignUp';\nimport WelcomeUser from './components/WelcomeUser';\n\n//components which sit outside the main page\nimport Header from './components/Header';\n\n\n\nfunction App() {\n\n  return (\n    <Router>\n      <Header />\n      <WelcomeUser />\n        <Route exact path =\"/\" component={Home} />\n        <Route exact path =\"/home\" component={Home} />\n        <Route exact path=\"/random\" component={GeneratorPage} />\n        <Route exact path=\"/custom\" component={SubmitIdea} />\n        <Route exact path=\"/login\" component={SignUp} />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nimport reportWebVitals from './reportWebVitals';\n\n//AUTH0 variables for authentication\n\nconst domain = process.env.REACT_APP_AUTH0_DOMAIN;\nconst clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n\nReactDOM.render(\n  <React.StrictMode>\n      <Auth0Provider\n        domain={domain}\n        clientId={clientId}\n        redirectUri={window.location.origin}\n      >\n      <App />\n    </Auth0Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}